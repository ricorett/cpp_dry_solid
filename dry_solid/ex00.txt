1. Нарушение принципа единственной отвественности
— Класс Data отвечает как за хранение данных, так и за их форматирование в различные форматы (HTML, текс, JSON). Это приводит к смешению обязанностей — класс одновременно является хранилищем данных и их форматировщиком.
— Метод saveTo отвечает и за выбор формата, и за сохранение данных, что так же нарушает принцип единственной отвественности.

2. Нарушение принципа открытости/закрытости
— Добавление нового формата вывода требует изменения как класса Printable, так и класса Data. Это нарушает принцип, так как класс не может быть легко расширен без изменения исходного кода.
— Если потребуется добавление новых форматов, необходимо менять реализацию в нескольких местах, что затрудняет расширение и тестирование.

3. Нарушение принципа подстановки Барбары Лисков
— Класс Data, унаследованный от Printable, может бросать исключение, если вызывается неверный метод формата (например, printAsHTML при установленном формате kText). Это приводит к непредсказуемому поведению: интерфейс Printable предполагает, что любой объект-наследник может быть напечатан в любом формате, что не выполняется в Data.

4. Нарушение принципа разделения интерфейсов
— Интерфейс Printable содержит методы для вывода данных в трех разных форматах (printAsHTML, printAsText, printAsJSON).
 Классам, которые могут поддерживать только один или два из этих форматов, придется реализовывать ненужные методы.
